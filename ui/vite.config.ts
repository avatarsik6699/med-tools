import { defineConfig, loadEnv } from "vite";
import react from "@vitejs/plugin-react";
import path from "path";

export default defineConfig(({ mode }) => {
	const env = loadEnv(mode, process.cwd(), "");

	// –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ü–µ–ª–µ–≤–æ–π URL –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Ä–µ–∂–∏–º–∞
	// TODO: –≤ –∏–¥–µ–∞–ª–µ –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å —Ä–∞–±–æ—Ç—É —Å env –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–º–∏ –∏ –±—Ä–∞—Ç—å —Å—Å—ã–ª–∫–∏ –æ—Ç—Ç—É–¥–∞
	const targetUrl = (() => {
		switch (mode) {
			case "local":
				return env.VITE_API_URL;
			case "proxy":
				return "";
			default:
				return env.VITE_API_URL;
		}
	})();

	// –õ–æ–≥–∏—Ä—É–µ–º –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é –¥–ª—è –¥–µ–±–∞–≥–∞
	console.log("üöÄ Vite Config Debug:");
	console.log("  Mode:", mode);
	console.log("  VITE_API_URL:", env.VITE_API_URL);
	console.log("  Target URL:", targetUrl);

	return {
		plugins: [react()],
		/*
      –ó–∞—á–µ–º –Ω—É–∂–µ–Ω:
      –í production ("/med-tools/") - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –±—É–¥–µ—Ç —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç–æ –≤ –ø–æ–¥–ø–∞–ø–∫–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä https://domain.com/med-tools/
      –í development ("/") - –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –¥–æ—Å—Ç—É–ø–Ω–æ –≤ –∫–æ—Ä–Ω–µ, –Ω–∞–ø—Ä–∏–º–µ—Ä http://localhost:5173/
      –ù—É–∂–µ–Ω –ª–∏:
      –î–ê, –µ—Å–ª–∏ –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –¥–µ–ø–ª–æ–π –≤ –ø–æ–¥–ø–∞–ø–∫—É –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
      –ù–ï–¢, –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤—Å–µ–≥–¥–∞ –±—É–¥–µ—Ç –≤ –∫–æ—Ä–Ω–µ –¥–æ–º–µ–Ω–∞
    */
		base: process.env.NODE_ENV === "production" ? "/med-tools/" : "/",
		resolve: {
			alias: {
				"@": path.resolve(__dirname, "./src"),
			},
		},
		server: {
			port: 3001,
			strictPort: true,
			proxy: {
				// –ü—Ä–æ–∫—Å–∏ –¥–ª—è –ª–æ–∫–∞–ª—å–Ω–æ–π —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
				"/api": {
					target: targetUrl,
					changeOrigin: true,
					secure: mode !== "local", // –û—Ç–∫–ª—é—á–∞–µ–º SSL –ø—Ä–æ–≤–µ—Ä–∫—É —Ç–æ–ª—å–∫–æ –¥–ª—è localhost
					rewrite: (path) => path,
					configure: (proxy, options) => {
						/** –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –Ω—É–∂–Ω—ã–µ —É—Ä–æ–≤–Ω–∏ –ª–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏—è */
						proxy.on("proxyReq", (proxyReq, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è
							console.group(`üîç Proxy Request[ ${proxyReq.method} ]:`);
							console.log("  Original URL:", req.url);
							console.log("  Target URL:", `${options.target}${proxyReq.path}`);
							console.groupEnd();
							console.log(""); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
						});

						proxy.on("proxyRes", (proxyRes, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ–∫—Å–∏
							console.group(`üì° Proxy Response:`);
							console.log("  Status:", proxyRes.statusCode);
							console.log("  URL:", req.url);
							console.groupEnd();
							console.log(""); // –ü—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è
						});

						proxy.on("error", (err, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–æ–∫—Å–∏
							console.error("‚ùå Proxy Error:", err.message);
							console.error("  URL:", req.url);
							console.error("  Target:", options.target);
						});
					},
				},
				"/ws": {
					target: targetUrl,
					ws: true,
					changeOrigin: true,
					secure: mode !== "local",
					rewrite: (path) => path,
					configure: (proxy, options) => {
						proxy.on("proxyReq", (proxyReq, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –¥–µ—Ç–∞–ª–∏ –ø—Ä–æ–∫—Å–∏—Ä–æ–≤–∞–Ω–∏—è WebSocket
							console.group(`üîç WS Proxy Request[ ${proxyReq.method} ]:`);
							console.log("  Original URL:", req.url);
							console.log("  Target URL:", `${options.target}${proxyReq.path}`);
							console.groupEnd();
							console.log("");
						});

						proxy.on("proxyRes", (proxyRes, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –æ—Ç –ø—Ä–æ–∫—Å–∏ WebSocket
							console.group(`üì° WS Proxy Response:`);
							console.log("  Status:", proxyRes.statusCode);
							console.log("  URL:", req.url);
							console.groupEnd();
							console.log("");
						});

						proxy.on("error", (err, req) => {
							// –õ–æ–≥–∏—Ä—É–µ–º –æ—à–∏–±–∫–∏ –ø—Ä–æ–∫—Å–∏ WebSocket
							console.error("‚ùå WS Proxy Error:", err.message);
							console.error("  URL:", req.url);
							console.error("  Target:", options.target);
						});
					},
				},
			},
		},
	};
});
